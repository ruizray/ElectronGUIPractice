[{"C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\index.js":"1","C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\components\\App.jsx":"2","C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\components\\Sidenav.jsx":"3","C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\components\\Stuff.jsx":"4","C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\components\\Counters.jsx":"5","C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\components\\Settings.jsx":"6","C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\components\\Analytics.jsx":"7","C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\components\\Movies.jsx":"8","C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\components\\LoginForm.jsx":"9","C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\components\\Database.jsx":"10","C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\components\\PrivacyPolicy.jsx":"11","C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\scripts\\paginate.js":"12","C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\scripts\\graphData.js":"13","C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\scripts\\firebase.js":"14","C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\scripts\\fakeGenreService.js":"15","C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\scripts\\fakeMovieService.js":"16","C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\components\\MoviesTable.jsx":"17","C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\common\\Graph.jsx":"18","C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\common\\Pagination.jsx":"19","C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\common\\Counter.jsx":"20","C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\common\\listGroup.jsx":"21","C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\components\\DatabaseTable.jsx":"22","C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\components\\DataRequestForm.jsx":"23","C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\components\\DatabaseAddForm.jsx":"24","C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\common\\Form.jsx":"25","C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\common\\Input.jsx":"26","C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\components\\GoogleAuth.jsx":"27","C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\common\\Card.jsx":"28","C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\components\\TopNav.jsx":"29","C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\common\\Table\\Table.jsx":"30","C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\common\\Table\\TableHeader.jsx":"31","C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\common\\Table\\TableBody.jsx":"32","C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\components\\Signup.jsx":"33"},{"size":305,"mtime":1622012418711,"results":"34","hashOfConfig":"35"},{"size":518,"mtime":1622012805758,"results":"36","hashOfConfig":"35"},{"size":10621,"mtime":1622012839402,"results":"37","hashOfConfig":"35"},{"size":10072,"mtime":1621842339669,"results":"38","hashOfConfig":"35"},{"size":2058,"mtime":1621842339664,"results":"39","hashOfConfig":"35"},{"size":205,"mtime":1621901252066,"results":"40","hashOfConfig":"35"},{"size":7466,"mtime":1621989577130,"results":"41","hashOfConfig":"35"},{"size":3611,"mtime":1621986643469,"results":"42","hashOfConfig":"35"},{"size":1675,"mtime":1622010842643,"results":"43","hashOfConfig":"35"},{"size":4148,"mtime":1621993152248,"results":"44","hashOfConfig":"35"},{"size":191,"mtime":1621986643470,"results":"45","hashOfConfig":"35"},{"size":198,"mtime":1621842339704,"results":"46","hashOfConfig":"35"},{"size":1129,"mtime":1621842339703,"results":"47","hashOfConfig":"35"},{"size":0,"mtime":1622011207747,"results":"48","hashOfConfig":"35"},{"size":267,"mtime":1621842339702,"results":"49","hashOfConfig":"35"},{"size":2559,"mtime":1621842339703,"results":"50","hashOfConfig":"35"},{"size":769,"mtime":1621989661957,"results":"51","hashOfConfig":"35"},{"size":4088,"mtime":1621901252062,"results":"52","hashOfConfig":"35"},{"size":1057,"mtime":1621989982388,"results":"53","hashOfConfig":"35"},{"size":1112,"mtime":1621842339657,"results":"54","hashOfConfig":"35"},{"size":696,"mtime":1621912699915,"results":"55","hashOfConfig":"35"},{"size":781,"mtime":1621989658399,"results":"56","hashOfConfig":"35"},{"size":1316,"mtime":1621986643466,"results":"57","hashOfConfig":"35"},{"size":1355,"mtime":1621991796050,"results":"58","hashOfConfig":"35"},{"size":2103,"mtime":1622002109329,"results":"59","hashOfConfig":"35"},{"size":389,"mtime":1621991427613,"results":"60","hashOfConfig":"35"},{"size":2176,"mtime":1622000725322,"results":"61","hashOfConfig":"35"},{"size":529,"mtime":1621989915559,"results":"62","hashOfConfig":"35"},{"size":3643,"mtime":1621999345611,"results":"63","hashOfConfig":"35"},{"size":538,"mtime":1621989634891,"results":"64","hashOfConfig":"35"},{"size":749,"mtime":1621989548424,"results":"65","hashOfConfig":"35"},{"size":896,"mtime":1621989548265,"results":"66","hashOfConfig":"35"},{"size":1101,"mtime":1622013111217,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2axt64",{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"76"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"76"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"76"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"76"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},"C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\index.js",[],"C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\components\\App.jsx",["139"],"C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\components\\Sidenav.jsx",["140"],"C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\components\\Stuff.jsx",[],["141","142"],"C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\components\\Counters.jsx",[],"C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\components\\Settings.jsx",[],"C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\components\\Analytics.jsx",["143","144"],"import React, { Component } from 'react'\r\nimport Graph from '../common/Graph'\r\nimport Table from '../common/Table/Table'\r\nimport Calendar from 'react-calendar'\r\nimport 'react-calendar/dist/Calendar.css'\r\nimport html2canvas from 'html2canvas'\r\nimport { jsPDF } from 'jspdf'\r\nimport DataRequestForm from './DataRequestForm'\r\n\r\nclass Analytics extends Component {\r\n  state = {\r\n    data1: [],\r\n    data2: [],\r\n    type: 'bar',\r\n    type2: 'bar',\r\n    label1: 'Total Site Visits from - to - ',\r\n    label2: 'Top Pages',\r\n    startDate: '',\r\n    endDate: '',\r\n    pagecount: 0,\r\n    errors: {}\r\n  }\r\n  formatDate(date) {\r\n    var day = date.getDate()\r\n    var month = date.getMonth() + 1\r\n\r\n    if (day < 10) {\r\n      day = '0' + day\r\n    }\r\n    if (month < 10) {\r\n      month = '0' + month\r\n    }\r\n\r\n    return date.getFullYear() + '-' + month + '-' + day\r\n  }\r\n\r\n  parseReject = response => {\r\n    if (response.result.error.code === 401) {\r\n      alert(\r\n        'Request is missing required authentication credential\\nExpected OAuth 2 access token, login cookie or other valid authentication credential.'\r\n      )\r\n    }\r\n    //message: \"Request is missing required authentication credential. Expected OAuth 2 access token, login cookie or other valid authentication credential. See https://developers.google.com/identity/sign-in/web/devconsole-project.\"\r\n  }\r\n\r\n  parseResults = response => {\r\n    console.log(response)\r\n    const queryResult = response.result.reports[0].data.rows\r\n    const queryResult2 = response.result.reports[1].data.rows\r\n    let data1 = []\r\n    let data2 = []\r\n    queryResult.map(row => {\r\n      const dateSting = row.dimensions[0]\r\n      const formattedDate = `${dateSting\r\n        .substring(0, 4)\r\n        .trim()\r\n        .split('\\n')}-${dateSting.substring(4, 6).split('\\n')}-${dateSting\r\n        .substring(6, 8)\r\n        .split('\\n')}`\r\n      data1.push({ x: formattedDate, y: row.metrics[0].values[0].trim() })\r\n    })\r\n    queryResult2.map(row => {\r\n      const dateSting = row.dimensions[0]\r\n        .replace('- Bolingbrook, IL', '')\r\n        .trim()\r\n      data2.push({ x: dateSting, y: row.metrics[0].values[0].trim() })\r\n    })\r\n    const label2 = 'Top ' + this.state.pagecount + ' Pages'\r\n    data2.sort((firstItem, secondItem) => secondItem.y - firstItem.y)\r\n    data2 = data2.splice(1, this.state.pagecount)\r\n    this.setState({ data1, data2, label2 })\r\n  }\r\n\r\n  queryReport = () => {\r\n    window.gapi.client\r\n      .request({\r\n        path: '/v4/reports:batchGet',\r\n        root: 'https://analyticsreporting.googleapis.com/',\r\n        method: 'POST',\r\n        body: {\r\n          reportRequests: [\r\n            {\r\n              viewId: '138961309', //enter your view ID here\r\n              dateRanges: [\r\n                {\r\n                  startDate: this.state.startDate,\r\n                  endDate: this.state.endDate\r\n                }\r\n              ],\r\n              metrics: [\r\n                {\r\n                  expression: 'ga:users'\r\n                }\r\n              ],\r\n              dimensions: [\r\n                {\r\n                  name: 'ga:date'\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              viewId: '138961309', //enter your view ID here\r\n              dateRanges: [\r\n                {\r\n                  startDate: this.state.startDate,\r\n                  endDate: this.state.endDate\r\n                }\r\n              ],\r\n              metrics: [\r\n                {\r\n                  expression: 'ga:pageviews'\r\n                }\r\n              ],\r\n              dimensions: [\r\n                {\r\n                  name: 'ga:pageTitle'\r\n                }\r\n              ]\r\n            }\r\n          ]\r\n        }\r\n      })\r\n      .then(this.parseResults, this.parseReject)\r\n  }\r\n\r\n  handleSubmit = pagecount => {\r\n    if(!this.state.startDate || !this.state.endDate){\r\n      alert(\"Must selected date ranges to request data\")\r\n    }\r\n    this.setState({ pagecount })\r\n    \r\n    this.queryReport()\r\n  }\r\n\r\n  handleDownload = () => {\r\n    var input = document.querySelector('#pdf')\r\n    html2canvas(input, { scrollY: -window.scrollY }).then(canvas => {\r\n      const imgData = canvas.toDataURL('image/png')\r\n      const pdf = new jsPDF({})\r\n      const imgProps = pdf.getImageProperties(imgData)\r\n      const pdfWidth = pdf.internal.pageSize.getWidth()\r\n      const pdfHeight = (imgProps.height * pdfWidth) / imgProps.width\r\n      pdf.addImage(imgData, 'PNG', 0, 0, pdfWidth, pdfHeight)\r\n      pdf.save('download.pdf')\r\n    })\r\n  }\r\n\r\n  columns = [\r\n    { path: 'x', label: 'Date' },\r\n    { path: 'y', label: 'Total Visits' }\r\n  ]\r\n\r\n  columns2 = [\r\n    { path: 'z', label: 'Page Ranking' },\r\n    { path: 'x', label: 'Page Title' },\r\n    { path: 'y', label: 'Page Visits' }\r\n  ]\r\n\r\n  handleDate = e => {\r\n    console.log(e[0], e[1])\r\n    var date1 = this.formatDate(e[0])\r\n    var date2 = this.formatDate(e[1])\r\n    const label1 = 'Total site visits from: ' + date1 + ' to ' + date2\r\n    this.setState({ startDate: date1, endDate: date2, label1 }, () => {})\r\n  }\r\n\r\n  render() {\r\n    console.log(this.today);\r\n    return (\r\n      <main id=\"pdf\">\r\n        <div className=\"container-fluid px-4\">\r\n          <h1 className=\"mt-4\">Google Analytics Data For VOB Website</h1>\r\n          <ol className=\"breadcrumb mb-4\">\r\n            <li className=\"breadcrumb-item\">\r\n              <a href=\"index.html\">Dashboard</a>\r\n            </li>\r\n            <li className=\"breadcrumb-item active\">Google Analytics</li>\r\n          </ol>\r\n          <div className=\"card mb-4\">\r\n            <div className=\"card-body\">\r\n              This application gets Google Analytics Data using Google Analytics\r\n              Reporting API v4. In order to retrieve data, users must sign into\r\n              a Google account that is allowed to retrieve data from the server.\r\n              Currently, only Ray and James are the only available users.\r\n              <ol>\r\n                <li>Select Date range on calendar</li>\r\n                <li>Fill out other request options</li>\r\n                <li>Click Send Request Button</li>\r\n                <li>Click Download Report Button</li>\r\n              </ol>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\" >\r\n            <div  className=\"col-md-3 mb-4\">\r\n              <Calendar\r\n                onChange={this.handleDate}\r\n                selectRange\r\n                returnValue=\"range\"\r\n                maxDate={new Date().today}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-9\">\r\n              <DataRequestForm\r\n                onSubmit={this.handleSubmit}\r\n                onDownloadClick={this.handleDownload}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row my-4\">\r\n            <div className=\"col-md-6\">\r\n              <Graph title={this.state.label1} data={this.state.data1} />\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <Graph title={this.state.label2} data={this.state.data2} />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row  my-4\">\r\n            <div className=\"col-md-6\">\r\n              <Table columns={this.columns} data={this.state.data1} />\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <Table columns={this.columns2} data={this.state.data2} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Analytics\r\n","C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\components\\Movies.jsx",[],"C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\components\\LoginForm.jsx",["145","146","147"],"import React, { Component } from 'react'\r\nimport Joi from 'joi-browser'\r\nimport Form from '../common/Form'\r\n\r\nimport { FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport { faGoogle} from '@fortawesome/free-brands-svg-icons' \r\nclass LoginForm extends Form {\r\n  state = {\r\n    data: { username: '', password: '' },\r\n    errors: {}\r\n  }\r\n\r\n  schema = {\r\n    username: Joi.string().required().label('Username'),\r\n    password: Joi.string().required().label('Password')\r\n  }\r\n\r\n  doSubmit = () => {\r\n    console.log('Submitted')\r\n  }\r\n\r\n  render() {\r\n    const { data, errors } = this.state\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div class=\"container-fluid px-4\">\r\n          <h1 class=\"mt-4\">Login Form</h1>\r\n          <ol class=\"breadcrumb mb-4\">\r\n            <li class=\"breadcrumb-item\">\r\n              <a href=\"index.html\">Dashboard</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">Login Form</li>\r\n          </ol>\r\n\r\n          <div class=\"card mb-4\">\r\n            <div class=\"card-header\">\r\n              <i class=\"fas fa-table me-1\"></i>\r\n              DataTable Example\r\n            </div>\r\n            <div className=\"row mx-4 my-4\">\r\n              <h1>Login</h1>\r\n              <form onSubmit={this.handleSubmit}>\r\n                {this.renderInput('username', 'Username')}\r\n                {this.renderInput('password', 'Password', 'password')}\r\n                {this.renderButton('Login')}\r\n               <FontAwesomeIcon style={{height:100}}  icon={faGoogle}/>\r\n              </form>\r\n             \r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default LoginForm\r\n","C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\components\\Database.jsx",[],"C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\components\\PrivacyPolicy.jsx",[],"C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\scripts\\paginate.js",[],"C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\scripts\\graphData.js",[],"C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\scripts\\firebase.js",[],"C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\scripts\\fakeGenreService.js",[],"C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\scripts\\fakeMovieService.js",[],"C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\components\\MoviesTable.jsx",[],"C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\common\\Graph.jsx",[],"C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\common\\Pagination.jsx",["148"],"import React from 'react';\r\nimport _ from 'lodash';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Pagination = props => {\r\n    const { itemsCount, pageSize, currentPage, onPageChange } = props;\r\n    const pagesCount = Math.ceil(itemsCount / pageSize);\r\n    console.log(currentPage)\r\n    if (pagesCount === 1) return null;\r\n    const pages = _.range(1, pagesCount + 1);\r\n    return (\r\n\r\n        <nav aria-label=\"Page navigation example\">\r\n            <ul className=\"pagination\">\r\n                {pages.map(page => (\r\n                    <li key={page} className={page === currentPage ? 'page-item active' : 'page-item'}>\r\n                        <a className=\"page-link\" onClick={() => onPageChange(page)} >{page}</a>\r\n\r\n                    </li>\r\n                ))}\r\n\r\n\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nPagination.propTypes = {\r\n    itemsCount: PropTypes.number.isRequired,\r\n    pageSize: PropTypes.number.isRequired,\r\n    currentPage: PropTypes.number.isRequired,\r\n    onPageChange: PropTypes.func.isRequired,\r\n}\r\nexport default Pagination","C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\common\\Counter.jsx",[],"C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\common\\listGroup.jsx",[],"C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\components\\DatabaseTable.jsx",[],"C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\components\\DataRequestForm.jsx",[],"C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\components\\DatabaseAddForm.jsx",[],"C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\common\\Form.jsx",[],"C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\common\\Input.jsx",[],"C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\components\\GoogleAuth.jsx",["149"],"import React, { Component } from 'react'\r\n\r\nimport { provider } from './../scripts/firebase';\r\nclass GoogleAuth extends Component {\r\n  state = {\r\n    isSignedIn: false,\r\n    text: ''\r\n  }\r\n\r\n  componentDidMount() {\r\n  \r\n  }\r\n  renderButton = () => {\r\n    window.gapi.signin2.render(\"signin-button\", {\r\n      scope: \"profile email\",\r\n      width: 240,\r\n      height: 50,\r\n      longtitle: true,\r\n      theme: \"dark\",\r\n      onsuccess: this.onSuccess,\r\n      onfailure: this.onFailure,\r\n    });\r\n\r\n  };\r\n\r\n  onSuccess = (googleUser) => {\r\n    const text = \"Logged in as: \" + googleUser.getBasicProfile().getName()\r\n    this.setState({ text })\r\n    console.log(\"Logged in as: \" + googleUser.getBasicProfile().getName());\r\n  };\r\n\r\n  onFailure = (error) => {\r\n    console.error(error);\r\n  };\r\n\r\n  initAuth = () => {\r\n    return window.gapi.auth2.init({\r\n      client_id: \"875088528337-s8vg8pjfare4cu3l5blvtvak0ucqdpsj.apps.googleusercontent.com\", //paste your client ID here\r\n      scope: \"https://www.googleapis.com/auth/analytics.readonly\",\r\n    });\r\n  };\r\n\r\n  checkSignedIn = () => {\r\n    var promise = new Promise((resolve, reject) => {\r\n      this.initAuth() //calls the previous function\r\n        .then(() => {\r\n          const auth = window.gapi.auth2.getAuthInstance(); //returns the GoogleAuth object\r\n\r\n          resolve(auth.isSignedIn.get()); //returns whether the current user is currently signed in\r\n        })\r\n        .catch((error) => {\r\n          reject(error);\r\n        });\r\n    });\r\n    return promise;\r\n  };\r\n\r\n  init = () => {\r\n    //(2)\r\n    this.checkSignedIn().then(signedIn => {\r\n      if (signedIn === false) {\r\n        this.setState({ text: \"Not Currently Logged In\" })\r\n        this.renderButton()\r\n      }\r\n      this.setState({ isSignedIn: signedIn })\r\n      this.renderButton()\r\n\r\n    })\r\n      .catch(error => {\r\n        console.error(error)\r\n        console.log(\"error\")\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ width: '100%' }} >\r\n\r\n        <div className=\"small\">{this.state.text}</div>\r\n        <div style={{ width: '100%' }} id=\"signin-button\"></div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleAuth;\r\n\r\n\r\n","C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\common\\Card.jsx",[],"C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\components\\TopNav.jsx",[],"C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\common\\Table\\Table.jsx",[],"C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\common\\Table\\TableHeader.jsx",[],"C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\common\\Table\\TableBody.jsx",[],"C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\components\\Signup.jsx",["150","151","152","153","154","155","156","157"],{"ruleId":"158","severity":1,"message":"159","line":1,"column":17,"nodeType":"160","messageId":"161","endLine":1,"endColumn":26},{"ruleId":"162","severity":1,"message":"163","line":245,"column":21,"nodeType":"164","endLine":245,"endColumn":33},{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","severity":1,"message":"170","line":52,"column":25,"nodeType":"171","messageId":"172","endLine":52,"endColumn":27},{"ruleId":"169","severity":1,"message":"170","line":62,"column":26,"nodeType":"171","messageId":"172","endLine":62,"endColumn":28},{"ruleId":"158","severity":1,"message":"159","line":1,"column":17,"nodeType":"160","messageId":"161","endLine":1,"endColumn":26},{"ruleId":"158","severity":1,"message":"173","line":23,"column":13,"nodeType":"160","messageId":"161","endLine":23,"endColumn":17},{"ruleId":"158","severity":1,"message":"174","line":23,"column":19,"nodeType":"160","messageId":"161","endLine":23,"endColumn":25},{"ruleId":"162","severity":1,"message":"175","line":17,"column":25,"nodeType":"164","endLine":17,"endColumn":86},{"ruleId":"158","severity":1,"message":"176","line":3,"column":10,"nodeType":"160","messageId":"161","endLine":3,"endColumn":18},{"ruleId":"158","severity":1,"message":"177","line":1,"column":17,"nodeType":"160","messageId":"161","endLine":1,"endColumn":23},{"ruleId":"158","severity":1,"message":"178","line":2,"column":10,"nodeType":"160","messageId":"161","endLine":2,"endColumn":14},{"ruleId":"158","severity":1,"message":"179","line":2,"column":16,"nodeType":"160","messageId":"161","endLine":2,"endColumn":22},{"ruleId":"158","severity":1,"message":"180","line":2,"column":24,"nodeType":"160","messageId":"161","endLine":2,"endColumn":28},{"ruleId":"158","severity":1,"message":"181","line":8,"column":10,"nodeType":"160","messageId":"161","endLine":8,"endColumn":27},{"ruleId":"158","severity":1,"message":"182","line":28,"column":11,"nodeType":"160","messageId":"161","endLine":28,"endColumn":20},{"ruleId":"158","severity":1,"message":"183","line":29,"column":12,"nodeType":"160","messageId":"161","endLine":29,"endColumn":16},{"ruleId":"184","severity":1,"message":"185","line":31,"column":26,"nodeType":"186","messageId":"187","endLine":31,"endColumn":62,"fix":"188"},"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["189"],"no-negated-in-lhs",["190"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'data' is assigned a value but never used.","'errors' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'provider' is defined but never used.","'useRef' is defined but never used.","'Card' is defined but never used.","'Button' is defined but never used.","'Form' is defined but never used.","'useCollectionData' is defined but never used.","'firestore' is assigned a value but never used.","'user' is assigned a value but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"191","text":"192"},"no-global-assign","no-unsafe-negation",[888,888],"()"]