[{"C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\index.js":"1","C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\components\\Sidenav.jsx":"2","C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\components\\Movies.jsx":"3","C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\components\\fakeMovieService.js":"4","C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\components\\Graph.jsx":"5","C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\components\\fakeGenreService.js":"6","C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\components\\Counters.jsx":"7","C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\components\\Counter.jsx":"8","C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\components\\App.jsx":"9","C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\components\\Stuff.jsx":"10","C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\components\\Checkbox.jsx":"11","C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\scripts\\readGraphFile.js":"12","C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\components\\Pagination.jsx":"13","C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\scripts\\paginate.js":"14","C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\components\\listGroup.jsx":"15"},{"size":497,"mtime":1621487039386,"results":"16","hashOfConfig":"17"},{"size":2569,"mtime":1621479755262,"results":"18","hashOfConfig":"17"},{"size":3854,"mtime":1621491274344,"results":"19","hashOfConfig":"17"},{"size":2559,"mtime":1621466375475,"results":"20","hashOfConfig":"17"},{"size":2352,"mtime":1621466375472,"results":"21","hashOfConfig":"17"},{"size":267,"mtime":1621466375475,"results":"22","hashOfConfig":"17"},{"size":2593,"mtime":1621480828933,"results":"23","hashOfConfig":"17"},{"size":1137,"mtime":1621476224010,"results":"24","hashOfConfig":"17"},{"size":338,"mtime":1621490783865,"results":"25","hashOfConfig":"17"},{"size":12992,"mtime":1621487188694,"results":"26","hashOfConfig":"17"},{"size":522,"mtime":1621484923277,"results":"27","hashOfConfig":"17"},{"size":421,"mtime":1621483981156,"results":"28","hashOfConfig":"17"},{"size":1067,"mtime":1621490474973,"results":"29","hashOfConfig":"17"},{"size":198,"mtime":1621489873168,"results":"30","hashOfConfig":"17"},{"size":110,"mtime":1621490724291,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1hes6g1",{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\index.js",[],["66","67"],"C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\components\\Sidenav.jsx",["68","69"],"import React, { Component } from 'react'\r\n\r\nimport {\r\n\r\n  Route,\r\n  NavLink,\r\n  HashRouter\r\n} from 'react-router-dom'\r\n\r\n\r\nimport Movies from './Movies'\r\nimport Stuff from './Stuff'\r\nimport Counter from './Counters'\r\nconst Sidenav = () => {\r\n\r\n\r\n   \r\n    return (\r\n      <React.Fragment>\r\n\r\n          <nav className=\"nav js-nav\">\r\n            <header className=\"nav-header\">\r\n              <h1 className=\"nav-title\">\r\n                Electron <strong>API Demos</strong>\r\n              </h1>\r\n            </header>\r\n            <div className=\"nav-item u-category-windows\">\r\n              <h5 className=\"nav-category\">Menu Sample</h5>\r\n            </div>\r\n            <NavLink style={{textDecoration:'none'}} to=\"/\">\r\n              <button\r\n                type=\"button\" \r\n                id=\"button-movies\"\r\n                data-section=\"movies\"\r\n                className=\"nav-button\"\r\n              >\r\n                Open <em>Movies App</em>\r\n              </button>\r\n            </NavLink>\r\n            <NavLink style={{textDecoration:'none'}} to =\"/counter\"><button\r\n              type=\"button\"\r\n              id=\"button-counter\"\r\n              data-section=\"counter\"\r\n              className=\"nav-button\"\r\n            >\r\n              Open <em> counter example</em>\r\n            </button></NavLink>\r\n            <NavLink style={{textDecoration:'none'}} to =\"/stuff\"><button\r\n              type=\"button\"\r\n              id=\"button-crash-hang\"\r\n              data-section=\"crash-hang\"\r\n              className=\"nav-button\"\r\n            >\r\n              Handling window <em>crashes and hangs</em>\r\n            </button></NavLink>\r\n            \r\n            <footer className=\"nav-footer\">\r\n              <button\r\n                type=\"button\"\r\n                id=\"button-about\"\r\n                data-modal=\"about\"\r\n                className=\"nav-footer-button\"\r\n              >\r\n                About\r\n              </button>\r\n              <a\r\n                className=\"nav-footer-logo\"\r\n                href=\"https://github.com\"\r\n                aria-label=\"Homepage\"\r\n              >\r\n                <svg className=\"nav-footer-icon\"></svg>\r\n              </a>\r\n            </footer>\r\n          </nav>\r\n          <div className=\"content js-content\">\r\n                 \r\n                 \r\n          <Route exact path=\"/\" component={Movies} />\r\n                    <Route path=\"/stuff\" component={Stuff} />\r\n                    <Route path=\"/counter\" component={Counter} />\r\n        </div>\r\n      </React.Fragment>\r\n      \r\n    )\r\n  \r\n}\r\n\r\nexport default Sidenav\r\n","C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\components\\Movies.jsx",["70"],"C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\components\\fakeMovieService.js",[],"C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\components\\Graph.jsx",[],"C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\components\\fakeGenreService.js",[],"C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\components\\Counters.jsx",[],"C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\components\\Counter.jsx",["71"],"import React, { Component } from 'react';\r\n\r\nclass Counter extends Component {\r\n   \r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.children}\r\n                <code style={{fontSize:25 , marginRight:10}} className={this.getBadgeClasses()}>{this.formatCount()}</code>\r\n                <button onClick={() => this.props.onIncrement(this.props.counter)} className=\"demo-button\">Increment</button>\r\n             \r\n             {/* Handled by parent. ANY MODIFICATIONS TO CHILDREN SHOULD BE HANDLED BY PARENTS */}\r\n               <button onClick={() => this.props.onDelete(this.props.counter.id)} style={{color:'red'}} className=\"demo-button btn btn-danger btn-sm m-2\">Delete</button>\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n    getBadgeClasses() {\r\n        let classes = \"badge m-2 badge-\";\r\n        //If count is 0 set warning else primary\r\n        classes += this.props.counter.value == 0 ? \"warning\" : \"primary\";\r\n        return classes;\r\n    }\r\n\r\n    formatCount(){\r\n        const {value} = this.props.counter;\r\n        return value === 0 ? \"Zero\" : value;\r\n    }\r\n}\r\n\r\nexport default Counter;","C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\components\\App.jsx",[],"C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\components\\Stuff.jsx",["72","73","74","75","76"],"import React, { Component } from \"react\";\r\nimport Graph from './Graph'\r\nimport Checkbox from './Checkbox'\r\nimport {readFileInput} from '../scripts/readGraphFile'\r\nclass Stuff extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            sortedCheckbox:{type: '', label : 'Sorted', id: 'sortGraph', active: false},\r\n\r\n            typeCheckboxes: [\r\n                {type: 'bar', label : 'Bar Chart', id: 'chartTypeBar', active: false },\r\n                {type: 'line', label : 'Line Chart', id: 'chartTypeLine', active: false }\r\n            ],\r\n\r\n            chartType:'',\r\n            lines: [],\r\n            graphStart: \"\",\r\n            nextGraph: \"\",\r\n            previousGraph: \"\",\r\n            dataSets: [],\r\n            sendGraph: [],\r\n            graphs: 0,\r\n            graphPos: 0,\r\n        }\r\n    }\r\n\r\n    enableButtons = (button) => {\r\n        button.disabled = false;\r\n        console.log(button)\r\n    }\r\n    handleFileInput = async (e) => {\r\n        let lines = await readFileInput(e);\r\n        this.setState({lines})\r\n    }\r\n\r\n    graphStart = (e) => {\r\n \r\n\r\n        // settings.set('graph', {\r\n        //     state: this.state    ,\r\n        // })\r\n\r\n        this.CreateGraphs()\r\n        console.log(this.state)\r\n        var firstGraph = this.state.dataSets[this.state.graphPos].data;\r\n        console.log(firstGraph)\r\n        this.wrapState(firstGraph)\r\n        console.log(this.state)\r\n    }\r\n\r\n    graphNext = (e) => {\r\n        console.log(this.state)\r\n        var temp = this.state.graphPos;\r\n        temp++;\r\n        console.log(this.state)\r\n\r\n        this.setState({ graphPos: temp })\r\n        var firstGraph = this.state.dataSets[temp].data;\r\n        this.wrapState(firstGraph)\r\n    }\r\n\r\n    wrapState = (state) => {\r\n        let\r\n            data = {\r\n                datasets: [{\r\n                    data: state,\r\n                    label: '',\r\n                    backgroundColor: [\r\n                        'rgba(255, 99, 132, 0.2)',\r\n                        'rgba(54, 162, 235, 0.2)',\r\n                        'rgba(255, 206, 86, 0.2)',\r\n                        'rgba(75, 192, 192, 0.2)',\r\n                        'rgba(153, 102, 255, 0.2)',\r\n                        'rgba(255, 159, 64, 0.2)'\r\n                    ],\r\n                    borderColor: [\r\n                        'rgba(255, 99, 132, 1)',\r\n                        'rgba(54, 162, 235, 1)',\r\n                        'rgba(255, 206, 86, 1)',\r\n                        'rgba(75, 192, 192, 1)',\r\n                        'rgba(153, 102, 255, 1)',\r\n                        'rgba(255, 159, 64, 1)'\r\n                    ],\r\n                    borderWidth: 1\r\n                }]\r\n            };\r\n\r\n        this.setState({ sendGraph: data });\r\n    }\r\n\r\n\r\n\r\n    CreateGraphs = () => {\r\n        var lines = this.state.lines\r\n        console.log(lines)\r\n        this.state.lines.shift();\r\n        this.state.lines.shift();\r\n        this.state.lines.shift();\r\n        this.state.lines.shift();\r\n        while (this.state.lines.length != 0) {\r\n            var groupNum = this.state.lines.shift();\r\n            var group = this.state.lines.splice(0, groupNum);\r\n            this.readLines(group)\r\n            this.state.lines.shift();\r\n            let temp = this.state.graphs + 1;\r\n            this.setState({ graphs: temp });\r\n        }\r\n    }\r\n    readLines = (group) => {\r\n        var line;\r\n        var tempdata = { data: [], label: \"\", sortedData: [] }\r\n\r\n        for (var i = 0; i < group.length; i++) {\r\n            line = group[i].split(',');\r\n            tempdata.data.push({ x: line[1] + \", \" + line[2], y: line[3] })\r\n        }\r\n        tempdata.label = line[0]\r\n        var temp = this.state.dataSets.push(tempdata)\r\n        console.log(temp)\r\n        this.setState({ dataSets: temp })\r\n\r\n    }\r\n\r\n\r\n    handleTypeCheckboxClick = checkbox => {\r\n        console.log(checkbox)\r\n    }\r\n\r\n    render() {\r\n        //let btn_class = this.state.isOpen ? \"button-graph\" : \"button-graph is-open\";\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <section id=\"windows-section\" className=\"section js-section u-category-windows\">\r\n                    <header className=\"section-header\">\r\n                        <div className=\"section-wrapper\">\r\n                            <h1>\r\n\r\n                                Graphing Data\r\n        </h1>\r\n\r\n                        </div>\r\n                    </header>\r\n\r\n                    <div className=\"demo\">\r\n                        <div className=\"demo-wrapper is-open\">\r\n                            <button id=\"new-graph-toggle\" onClick={() => this.isOpen} className=\"js-container-target demo-toggle-button\">Create a graph\r\n          <div className=\"demo-meta u-avoid-clicks\">Supports: Win, macOS, Linux <span className=\"demo-meta-divider\">|</span>\r\n            Process: Main</div>\r\n                            </button>\r\n                            <p>In this demo we create a new Graph (via the <code>renderChart.js</code> script) and provide a source file\r\n          <code>input.txt</code> that will\r\n          generate the graph\r\n        </p>\r\n                            <div className=\"demo-box\">\r\n                                <div style={{ marginBottom: '20px' }} className=\"row\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <Graph data={this.state.sendGraph} />\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div id=\"fileSelectorContainer\" style={{ marginBottom: '20px', marginLeft: '2px' }} className=\"row\">\r\n                                    <input type=\"file\" id=\"file-selector\" onChange={(e) => this.handleFileInput(e)}></input>\r\n                                </div>\r\n\r\n                                <div style={{ marginBottom: '10px' }, { marginLeft: '2px' }} id=\"graphTitleContainer\" className=\"row\">\r\n                                    <label htmlFor=\"graphTitle\">Graph Title: </label>\r\n                                    <input  style={{ marginLeft: 10 }} type=\"text\" id=\"graphTitle\" name=\"graphTitle\" defaultValue=\"\"></input>\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                                <h5>Sort Graph</h5>\r\n                                <div id=\"sortGraphBox\" className=\"row\">\r\n                                    <div className=\"col-md-3\">\r\n\r\n                                        <Checkbox key={this.state.sortedCheckbox.id} onCheck={this.handleTypeCheckboxClick} checkbox={this.state.sortedCheckbox} />\r\n                                        {/* <input type=\"checkbox\" id=\"sortedBox\" name=\"sortedBox\" onChange={(e) => this.checkBoxes(e)} value=\"false\"></input>\r\n                                        <label htmlFor=\"sortedBox\"> Sorted</label>\r\n                                     */}\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <h5>Chart Type</h5>\r\n                                <div id=\"chartTypeBoxes\" style={{ marginBottom: '10px' }} className=\"row\">\r\n                                    <div className=\"col-md-3\">\r\n                                    <Checkbox key={this.state.typeCheckboxes[0].id} onCheck={this.handleTypeCheckboxClick} checkbox={this.state.typeCheckboxes[0]} />\r\n                                    </div>\r\n                                    <div className=\"col-md-3\">\r\n                                    <Checkbox key={this.state.typeCheckboxes[1].id} onCheck={this.handleTypeCheckboxClick} checkbox={this.state.typeCheckboxes[1]} />\r\n                                    </div>\r\n                                    <div className=\"col-md-3\">\r\n                                        <input type=\"checkbox\" className=\"chartType\" id=\"pieBox\" ></input>\r\n                                        <label htmlFor=\"pieBox\">Pie Chart</label>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <h5>Graph Controls</h5>\r\n                                <div id=\"GraphControls\" style={{ marginBottom: '10px' }} className=\"row\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <button style={{ width: '100%' }} className=\"demo-button button-group\" onClick={(e) => this.graphStart(e)} id=\"graphStart\" disabled={!this.state.graphStart}>Start Graph</button>\r\n                                    </div>\r\n                                </div>\r\n                                <div style={{ marginBottom: '10px' }} className=\"row\">\r\n                                    <div className=\"col-md-4\">\r\n                                        <button style={{ width: '100%' }} className=\"demo-button button-group\" id=\"prevGraph\" disabled>Previous Graph</button>\r\n                                    </div>\r\n                                    <div className=\"col-md-4\"><button style={{ marginBottom: '10px' }, { width: '100%' }} className=\"demo-button \" id=\"sortGraph\"\r\n                                        disabled>Sort\r\n              Graph</button></div>\r\n                                    <div className=\"col-md-4\">\r\n                                        <button style={{ width: '100%' }} className=\"demo-button button-group\" onClick={(e) => this.graphNext(e)} id=\"nextGraph\" disabled={!this.state.nextGraph}>Next Graph</button>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <h5>Animation Controls</h5>\r\n                                <div id=\"animationControls\" style={{ marginbottom: '10px' }} className=\"row\">\r\n                                    <div className=\"col-md-6\">\r\n                                        <button style={{ marginBottom: '10px' }, { width: '100%' }} className=\"demo-button \" id=\"startAnimation\" disabled>Start Animation</button>\r\n                                    </div>\r\n\r\n\r\n                                    <div className=\"col-md-6\"><button style={{ marginBottom: '10px' }, { width: '100%' }} className=\"demo-button \" id=\"endAnimation\"\r\n                                        disabled>End Animation</button></div>\r\n                                </div>\r\n\r\n\r\n                                <h5>input.txt</h5>\r\n                                <pre><code data-path=\"\\test\\input.txt\"></code></pre>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"demo\">\r\n                        <div className=\"demo-wrapper\">\r\n                            <button id=\"new-window-hangs-demo-toggle\" className=\"js-container-target demo-toggle-button\">Relaunch window after\r\n                            the process hangs\r\n          <div className=\"demo-meta u-avoid-clicks\">Supports: Win, macOS, Linux <span className=\"demo-meta-divider\">|</span>\r\n            Process: Main</div>\r\n                            </button>\r\n                            <div className=\"demo-box\">\r\n                                <div className=\"demo-controls\">\r\n                                    <button className=\"demo-button\" id=\"process-hang\">View Demo</button>\r\n                                </div>\r\n                                <p>In this demo we create a new window (via the <code>remote</code> module) and provide a link that will force\r\n            the process to hang using\r\n            <code>process.hang()</code>.\r\n          </p>\r\n                                <p>The window is listening for the process to become officially unresponsive (this can take up to 30 seconds).\r\n                                When this event occurs it\r\n            prompts the user with two options: reload or close.</p>\r\n\r\n                                <h5>Renderer Process</h5>\r\n                                <pre><code data-path=\"renderer-process/windows/renderChart.js\"></code></pre>\r\n\r\n                                <div className=\"demo-protip\">\r\n                                    <h2>ProTip</h2>\r\n                                    <strong>Wait for the process to become responsive again.</strong>\r\n                                    <p>A third option in the case of a process that is hanging is to wait and see if the problem resolves,\r\n                                    allowing the process to become\r\n              responsive again. To do this, use the <code>BrowserWindow</code> event 'responsive' as shown below.</p>\r\n                                    <pre><code className=\"language-js\">win.on('responsive', function () {\r\n                                        // Do something when the window is responsive again\r\n                                    })</code></pre>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </section>\r\n            </React.Fragment>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Stuff;","C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\components\\Checkbox.jsx",[],"C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\scripts\\readGraphFile.js",[],"C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\components\\Pagination.jsx",["77"],"C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\scripts\\paginate.js",[],"C:\\Users\\Erick\\source\\repos\\electron-react-ray\\src\\components\\listGroup.jsx",["78"],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":1,"column":17,"nodeType":"85","messageId":"86","endLine":1,"endColumn":26},{"ruleId":"83","severity":1,"message":"87","line":7,"column":3,"nodeType":"85","messageId":"86","endLine":7,"endColumn":13},{"ruleId":"88","severity":1,"message":"89","line":36,"column":15,"nodeType":"90","messageId":"91","endLine":36,"endColumn":17},{"ruleId":"88","severity":1,"message":"89","line":25,"column":45,"nodeType":"90","messageId":"91","endLine":25,"endColumn":47},{"ruleId":"88","severity":1,"message":"92","line":103,"column":40,"nodeType":"90","messageId":"91","endLine":103,"endColumn":42},{"ruleId":"93","severity":1,"message":"94","line":171,"column":69,"nodeType":"95","messageId":"96","endLine":171,"endColumn":70},{"ruleId":"93","severity":1,"message":"94","line":216,"column":102,"nodeType":"95","messageId":"96","endLine":216,"endColumn":103},{"ruleId":"93","severity":1,"message":"94","line":228,"column":80,"nodeType":"95","messageId":"96","endLine":228,"endColumn":81},{"ruleId":"93","severity":1,"message":"94","line":232,"column":102,"nodeType":"95","messageId":"96","endLine":232,"endColumn":103},{"ruleId":"97","severity":1,"message":"98","line":18,"column":25,"nodeType":"99","endLine":18,"endColumn":94},{"ruleId":"83","severity":1,"message":"100","line":1,"column":8,"nodeType":"85","messageId":"86","endLine":1,"endColumn":13},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'HashRouter' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'React' is defined but never used.","no-global-assign","no-unsafe-negation"]